package com.myha.android.ex_0211;

import android.app.Activity;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TextView;


public class SensorActivity extends Activity {

	// 센서 등록 해제
	SensorManager sensorManager;

	// 센서 이벤트 감지
	SensorEventListener sensorEventListener;

	// 센서 (센서별로 클래스가 별도로 있지는 않다. 생성할 때 가속도 센서로 쓰겠다고 하면 됨)
	Sensor sensor;

	// 센서의 좌표
	int x, y, z;

	TextView txtX, txtY, txtZ;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_sensor);

		txtX = (TextView) findViewById(R.id.txtX);
		txtY = (TextView) findViewById(R.id.txtY);
		txtZ = (TextView) findViewById(R.id.txtZ);

		sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
		sensor = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);     // 가속도 센서

		sensorEventListener = new SensorEventListener() {
			@Override
			public void onSensorChanged(SensorEvent sensorEvent) {
				// 센서의 좌표가 변경되면 호출되는 메소드
				x = (int) sensorEvent.values[0];        // X축 가속도 값
				y = (int) sensorEvent.values[1];
				z = (int) sensorEvent.values[2];

				txtX.setText("X : " + x);
				txtY.setText("Y : " + y);
				txtZ.setText("Z : " + z);
			}

			@Override
			public void onAccuracyChanged(Sensor sensor, int i) {
				// 센서의 민감도(반응속도)가 변경되면 호출되는 메소드
			}
		};
	}

	// 다른 화면에서 현재 Activity로 화면이 전환될 경우 센서에 이벤트 감지자를 등록
	@Override
	protected void onResume() {
		//super.onResume();
		//반응속도 : SENSOR_DELAY_FASTEST > GAME > UI > NORMAL
		sensorManager.registerListener(sensorEventListener, sensor, sensorManager.SENSOR_DELAY_GAME);
	}

	// 현재 액티비티에서 다른 화면으로 전환될 경우, 센서 이벤트 감지자를 해제

	@Override
	protected void onPause() {
		//super.onPause();
		sensorManager.unregisterListener(sensorEventListener);
	}
}
